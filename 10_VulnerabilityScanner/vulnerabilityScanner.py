'''
###########################################
Author: Qaidjohar Jawadwala
Organization: QJ Technologies.
--------------------------------------------
Code Title: Write a socket program to scan host vulnerabilities.
-------------------------------------------
#Steps fo Implementation:
---Import socket
---Read IP address
---Iterate through port and attempt to connect to socket
---If connected, and received banner(service name), check if service is vulnerable from vulnerable service list
---If vulnerable, then print the vulnerable service and increment count
---If count is more than 0, then machine is vulnerable

#Extensions to be performed
--Iterate through multiple IP addresses
--Access Command line arguments for IP addresses
--Store all vulnerabilities in a file and read the file.
--Provide File Path through command line arguments
Example:
python vullnerabilityScanner.y <ip_address range> <path to vulnerabilities files>

#################################################
'''

import socket  # Importing socket


def isVulnerable(banner):   # Checking if the running service is vulnerable
    #print banner
    vulnerableServices = [
        'FreeFloat Ftp Server (Version 1.00)', '3Com 3CDaemon FTP Server Version 2.0', 'Ability Server 2.34', 'Sami FTP Server 2.0.2', 'vsFTPd 3.0.3', 'SSH-2.0']
    for vulnerability in vulnerableServices:
        if vulnerability in banner:
            return True
    return False


if __name__ == "__main__":
    # Scanning the IP
    ip = '192.168.4.179'
    # Scanning the following ports
    portList = [20, 21, 23, 22, 53, 80, 443, 143]
    # Setting timeout to 2 seconds incase socket not able to connect
    socket.setdefaulttimeout(2)
    count = 0

    # Iterating through the ports
    for port in portList:
        try:
            # Initialize Socket
            s = socket.socket()
            # Attempt to connect with socket, exception if fails to connect
            s.connect((ip, port))
            # Receive banner of running service
            banner = s.recv(1024)
            # Checks if vulnerable
            if isVulnerable(banner):
                print "[+]Vulnerability Found on Port", port, ":", banner
                count += 1
        except:
            # Continue the loop in case of port not connecting or down
            continue

    # If count is more than 0, the machine is vulnerable
    if count:
        print "========================\nMachine is Vulnerable\n========================\n"
    else:
        print "========================\nMachine is Not Vulnerable\n========================\n"
